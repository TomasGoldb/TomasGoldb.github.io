@{
    ViewData["Title"] = "Crear plan - Juntify";
}

<main class="elegir-tipo-plan">
    <div class="main">
        <div class="progress-container">
            <div class="step completed">1</div>
            <div class="line"></div>
            <div class="step">2</div>
            <div class="line"></div>
            <div class="step">3</div>
            <div class="line"></div>
            <div class="step">4</div>
        </div>
        <div class="centrado">
            <h1 class="titulo-violeta">Agrega participantes al plan</h1>

        <div class="autocomplete-container">
        <input type="text" id="autocomplete-input" autocomplete="off" placeholder="Escribe para buscar...">
        <div class="suggestions" id="suggestions"></div>
        <button id="agregar-boton">Agregar</button>

        <div class="participantes-agregados" id="par-agr">
        </div>

                
                    
        <a class="copiar-enlace" id="copiarEnlace" href="#">Copiar enlace</a>
        <a class="boton-violeta" id="siguiente-btn" href='#'>Siguiente</a>
        
       </div>
    
</main>

<script>
  let amigos = [], nombresParticipantes = [];
let cantPersonas = 0;
let idsAmigosAgregados = []; // Lista de IDs seleccionados

$.ajax({
    url: '/CrearPlan/ListaAmigos',
    type: 'GET',
    data: {},
    dataType: 'json',
    success: function (data) {
        console.log(data);
        data.forEach(function (amigo, index) {
            if (!amigos[index]) {
                amigos[index] = {}; // Asegúrate de que el índice exista
            }
            nombresParticipantes.push(amigo.nombre);
            amigos[index].nombre = amigo.nombre;
            amigos[index].id = amigo.idUsuario;
            console.log(amigos[index]);
        });
    },
    error: function (jqXHR, textStatus, errorThrown) {
        console.log("Error:", jqXHR.status, textStatus, errorThrown);
    }
});

const suggestionsArray = nombresParticipantes;

document.getElementById('autocomplete-input').addEventListener('input', function () {
    const input = this.value.toLowerCase();
    const suggestionsBox = document.getElementById('suggestions');
    suggestionsBox.innerHTML = '';

    if (input) {
        const filteredSuggestions = suggestionsArray
            .filter(item => item.toLowerCase().includes(input))
            .slice(0, 6); // Mostrar solo las primeras 6

        filteredSuggestions.forEach(item => {
            const div = document.createElement('div');
            div.textContent = item;
            div.classList.add('suggestion-item');
            div.onclick = () => {
                selectSuggestion(item);
            };
            suggestionsBox.appendChild(div);
        });
    }
});

let seleccionado;

function selectSuggestion(item) {
    const inputField = document.getElementById('autocomplete-input');
    inputField.value = item;
    document.getElementById('suggestions').innerHTML = ''; // Limpiar sugerencias
    console.log(item);
    seleccionado = item;
}

let botonAgregar = document.getElementById("agregar-boton");
botonAgregar.addEventListener("click", () => {
    const amigo = amigos.find(a => a.nombre === seleccionado); // Busca al amigo por nombre
    if (amigo && !idsAmigosAgregados.includes(amigo.id)) { // Evita duplicados
        let persona =
            `<div class="participante-agregado" id="${cantPersonas}">
                <div>
                    <img src="/img/perfil.webp">
                    <h2>${amigo.nombre}</h2>
                </div>
                <a href="#" onclick="eliminarParticipante(${cantPersonas}, ${amigo.id})">Eliminar</a>
            </div>`;
        cantPersonas++;
        idsAmigosAgregados.push(amigo.id); // Agregar ID a la lista
        document.getElementById("par-agr").innerHTML += persona;
    } else {
        alert("Este amigo ya fue agregado o no es válido.");
    }
});

let botonEnviar = document.getElementById("siguiente-btn");
botonEnviar.addEventListener("click", () => {
    if (idsAmigosAgregados.length > 0) {
        let idsAmigosAgregadosStr=idsAmigosAgregados.join(",");
        console.log(idsAmigosAgregadosStr);
        console.log(idsAmigosAgregados);
        $.ajax({
            type: 'POST',
            dataType: 'text',
            url: '/CrearPlan/IngresarParticipantes',
            data: {idUsuarios: idsAmigosAgregadosStr},
            success: function (r) {
                window.location.href="/CrearPlan/FinalizarPlan";
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("Error subiendo los participantes");
                console.log("Error al guardar participantes:", jqXHR.status, textStatus, errorThrown);
                console.log("ajo y agua");
            }

        });
    } else {
        alert("No hay participantes seleccionados para guardar.");
    }
});

function eliminarParticipante(id, amigoId) {
    const element = document.getElementById(id);
    if (element) {
        element.remove();
        const index = idsAmigosAgregados.indexOf(amigoId);
        if (index !== -1) {
            idsAmigosAgregados.splice(index, 1); // Quitar el ID de la lista
        }
    } else {
        console.error("Element with id '" + id + "' not found.");
    }
}


            
  

let botonCopiarEnlace = document.getElementById("copiarEnlace");
botonCopiarEnlace.addEventListener("click", function(){
    botonCopiarEnlace.classList.add("copiado");
    botonCopiarEnlace.innerHTML="Enlace copiado";
    navigator.clipboard.writeText("Berman es CAPOOO");
    setTimeout(() => {
        botonCopiarEnlace.classList.remove("copiado");
        botonCopiarEnlace.innerHTML="Copiar enlace";
    }, 5000);
});

    let paso = 3;
const steps = document.querySelectorAll('.step');
const lines = document.querySelectorAll('.line');
document.addEventListener('DOMContentLoaded', () => {
    for (let i=1;i<paso;i++){
    if (i < steps.length - 1) {
        steps[i].classList.add('completed');
        lines[i - 1].classList.add('completed'); // Marca la línea anterior como completada
    }
}
});

[].forEach.call(document.getElementsByClassName('tags-input'), function (el) {
    let hiddenInput = document.createElement('input'),
        mainInput = document.createElement('input'),
        tags = [];
    
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', el.getAttribute('data-name'));

    mainInput.setAttribute('type', 'text');
    mainInput.classList.add('main-input');
    mainInput.addEventListener('input', function () {
        let enteredTags = mainInput.value.split(',');
        if (enteredTags.length > 1) {
            enteredTags.forEach(function (t) {
                let filteredTag = filterTag(t);
                if (filteredTag.length > 0)
                    addTag(filteredTag);
            });
            mainInput.value = '';
        }
    });

    mainInput.addEventListener('keydown', function (e) {
        let keyCode = e.which || e.keyCode;
        if (keyCode === 8 && mainInput.value.length === 0 && tags.length > 0) {
            removeTag(tags.length - 1);
        }
    });

    el.appendChild(mainInput);
    el.appendChild(hiddenInput);

    addTag('hello!');

    function addTag (text) {
        let tag = {
            text: text,
            element: document.createElement('span'),
        };

        tag.element.classList.add('tag');
        tag.element.textContent = tag.text;

        let closeBtn = document.createElement('span');
        closeBtn.classList.add('close');
        closeBtn.addEventListener('click', function () {
            removeTag(tags.indexOf(tag));
        });
        tag.element.appendChild(closeBtn);

        tags.push(tag);

        el.insertBefore(tag.element, mainInput);

        refreshTags();
    }

    function removeTag (index) {
        let tag = tags[index];
        tags.splice(index, 1);
        el.removeChild(tag.element);
        refreshTags();
    }

    function refreshTags () {
        let tagsList = [];
        tags.forEach(function (t) {
            tagsList.push(t.text);
        });
        hiddenInput.value = tagsList.join(',');
    }

    function filterTag (tag) {
        return tag.replace(/[^\w -]/g, '').trim().replace(/\W+/g, '-');
    }
});



 document.addEventListener("DOMContentLoaded", function(){
AutoCompletado();
    });





</script>
