@{
    ViewData["Title"] = "Crear plan - Juntify";
}

<main class="elegir-tipo-plan">
    <div class="main">
       
        <div class="centrado">
            <h1 class="titulo-violeta">Agrega a un amigo!</h1>

        <div class="autocomplete-container">
                 <div class="buscador-con-boton">
                         <input type="text" id="autocomplete-input" autocomplete="off" placeholder="Escribe para buscar...">
                 <button id="agregar-boton">Agregar</button></div>
        <div class="suggestions" id="suggestions"></div>

        <section class="participantes-agregados">

        <!--PROBANDO-->
        <section class="requests-section">
  <div class="container-requests">
    <h2 class="requests-title">Solicitudes pendientes:</h2>
    <div class="pending-requests">
      <div class="request-item">
        <img src="/img/perfil.webp" alt="Osvaldo Guido" class="request-img">
        <p class="request-name">Osvaldo Guido</p>
        <button class="btn-accept">&#10003;</button>
        <button class="btn-remove">&#10005;</button>
      </div>
    </div>

    <h2 class="requests-title">Actuales:</h2>
    <div class="current-requests">
    @for(int i=1;i<ViewBag.CantAmigos;i++){
      <div class="request-item">
        <img src="/img/perfil.webp" alt="Bill Puertas" class="request-img">
        <p class="request-name">@ViewBag.Amigos[i].Nombre</p>
        <a href='@Url.Action("EliminarAmigo","Home")'><button class="btn-remove" id="eliminar-amigo" onclick="eliminarAmigo()" name="@ViewBag.Amigos[i].idUsuario">&#10005;</button></a>
      </div>
    }
    </div>
  </div>
</section>

        <!--PROBANDO FIN-->
                
                    
        <a class="boton-violeta" href='@Url.Action("Home","Home")'>Siguiente</a>
        </section>
       </div>
    
</main>

<script>
    let amigos=[];
    let cantPersonas=0;
    $.ajax({
                    url: '/CrearPlan/ListaAmigos',
                    type: 'GET',
                    data: {},
                    dataType: 'json',
                    success: function (data) {
                        console.log(data);
                        data.forEach(function (amigo, index) {
                        amigos[index] = amigo.nombre;
                        
                        
                    });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log("Error:", jqXHR.status, textStatus, errorThrown); 
                    }
    });
            

    const suggestionsArray = amigos, boton=document.getElementById("siguiente-btn");
let tipo;

document.getElementById('autocomplete-input').addEventListener('input', function() {
    const input = this.value.toLowerCase();
    const suggestionsBox = document.getElementById('suggestions');
    suggestionsBox.innerHTML = '';

    if (input) {
        // Filtrar las sugerencias y limitar a 10 elementos
        const filteredSuggestions = suggestionsArray
            .filter(item => item.toLowerCase().includes(input))
            .slice(0, 6); // Mostrar solo las primeras 10

        filteredSuggestions.forEach(item => {
            const div = document.createElement('div');
            div.textContent = item;
            div.classList.add('suggestion-item');
            div.onclick = () => {
                selectSuggestion(item);
            };
            suggestionsBox.appendChild(div);
        });
    }
});

function selectSuggestion(item) {
    const inputField = document.getElementById('autocomplete-input');
    inputField.value = item;
    document.getElementById('suggestions').innerHTML = ''; // Limpiar sugerencias
    console.log(item);
    let persona=
    `
    <div class="participante-agregado" id="${cantPersonas}}">
                    <div>
                        <img src="/img/perfil.webp">
                        <h2>${cantPersonas}</h2>
                    </div>
                <a href="#"  onclick="eliminarParticipante(${cantPersonas})">Eliminar</a>
                </div>
    `;
    cantPersonas++;
    let contenedorAmigos = document.getElementById("participantes-agregados");
    contenedorAmigos.appendChild(persona);
    
}




    document.addEventListener("DOMContentLoaded", function(){
AutoCompletado();
    });
    function eliminarParticipante(id){
        document.getElementById(id).remove();
    }
                       

let botonCopiarEnlace = document.getElementById("copiarEnlace");
botonCopiarEnlace.addEventListener("click", function(){
    botonCopiarEnlace.classList.add("copiado");
    botonCopiarEnlace.innerHTML="Enlace copiado";
    navigator.clipboard.writeText("https://juntifyapp/3112621/jurejiuyghyIUCHWuwhqih/es.");
    setTimeout(() => {
        botonCopiarEnlace.classList.remove("copiado");
        botonCopiarEnlace.innerHTML="Copiar enlace";
    }, 5000);
});

    let paso = 3;
const steps = document.querySelectorAll('.step');
const lines = document.querySelectorAll('.line');
document.addEventListener('DOMContentLoaded', () => {
    for (let i=1;i<paso;i++){
    if (i < steps.length - 1) {
        steps[i].classList.add('completed');
        lines[i - 1].classList.add('completed'); // Marca la línea anterior como completada
    }
}
});

[].forEach.call(document.getElementsByClassName('tags-input'), function (el) {
    let hiddenInput = document.createElement('input'),
        mainInput = document.createElement('input'),
        tags = [];
    
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', el.getAttribute('data-name'));

    mainInput.setAttribute('type', 'text');
    mainInput.classList.add('main-input');
    mainInput.addEventListener('input', function () {
        let enteredTags = mainInput.value.split(',');
        if (enteredTags.length > 1) {
            enteredTags.forEach(function (t) {
                let filteredTag = filterTag(t);
                if (filteredTag.length > 0)
                    addTag(filteredTag);
            });
            mainInput.value = '';
        }
    });

    mainInput.addEventListener('keydown', function (e) {
        let keyCode = e.which || e.keyCode;
        if (keyCode === 8 && mainInput.value.length === 0 && tags.length > 0) {
            removeTag(tags.length - 1);
        }
    });

    el.appendChild(mainInput);
    el.appendChild(hiddenInput);

    addTag('hello!');

    function addTag (text) {
        let tag = {
            text: text,
            element: document.createElement('span'),
        };

        tag.element.classList.add('tag');
        tag.element.textContent = tag.text;

        let closeBtn = document.createElement('span');
        closeBtn.classList.add('close');
        closeBtn.addEventListener('click', function () {
            removeTag(tags.indexOf(tag));
        });
        tag.element.appendChild(closeBtn);

        tags.push(tag);

        el.insertBefore(tag.element, mainInput);

        refreshTags();
    }

    function removeTag (index) {
        let tag = tags[index];
        tags.splice(index, 1);
        el.removeChild(tag.element);
        refreshTags();
    }

    function refreshTags () {
        let tagsList = [];
        tags.forEach(function (t) {
            tagsList.push(t.text);
        });
        hiddenInput.value = tagsList.join(',');
    }

    function filterTag (tag) {
        return tag.replace(/[^\w -]/g, '').trim().replace(/\W+/g, '-');
    }
});


document.addEventListener("DOMContentLoaded", function () {
    let amigos = [];
    let cantPersonas = 0;
    let idsAmigosAgregados = []; // Lista de IDs seleccionados
    const suggestionsArray = [];

    // Obtener la lista de amigos vía AJAX
    $.ajax({
        url: '/CrearPlan/ListaAmigos',
        type: 'GET',
        dataType: 'json',
        success: function (data) {
            amigos = data.map(amigo => ({
                id: amigo.idUsuario,
                nombre: amigo.nombre,
            }));
            suggestionsArray.push(...amigos.map(amigo => amigo.nombre));
        },
        error: function (jqXHR, textStatus, errorThrown) {
            console.error("Error al obtener la lista de amigos:", jqXHR.status, textStatus, errorThrown);
        }
    });

    // Autocomplete
    document.getElementById('autocomplete-input').addEventListener('input', function () {
        const input = this.value.toLowerCase();
        const suggestionsBox = document.getElementById('suggestions');
        suggestionsBox.innerHTML = '';

        if (input) {
            const filteredSuggestions = suggestionsArray
                .filter(item => item.toLowerCase().includes(input))
                .slice(0, 6);

            filteredSuggestions.forEach(item => {
                const div = document.createElement('div');
                div.textContent = item;
                div.classList.add('suggestion-item');
                div.onclick = () => {
                    selectSuggestion(item);
                };
                suggestionsBox.appendChild(div);
            });
        }
    });

    // Seleccionar una sugerencia
    let seleccionado;
    function selectSuggestion(item) {
        const inputField = document.getElementById('autocomplete-input');
        inputField.value = item;
        document.getElementById('suggestions').innerHTML = '';
        seleccionado = item;
    }

    // Agregar participante
    document.getElementById("agregar-boton").addEventListener("click", () => {
        const amigo = amigos.find(a => a.nombre === seleccionado);
        if (amigo && !idsAmigosAgregados.includes(amigo.id)) {
            const contenedorAmigos = document.getElementById("par-agr");
            contenedorAmigos.innerHTML += `
                <div class="participante-agregado" id="participante-${cantPersonas}">
                    <div>
                        <img src="/img/perfil.webp">
                        <h2>${amigo.nombre}</h2>
                    </div>
                    <a href="#" onclick="eliminarParticipante(${cantPersonas}, ${amigo.id})">Eliminar</a>
                </div>`;
            cantPersonas++;
            idsAmigosAgregados.push(amigo.id);
        } else {
            alert("Este amigo ya fue agregado o no es válido.");
        }
    });

    // Eliminar participante
    window.eliminarParticipante = function (id, amigoId) {
        document.getElementById(`participante-${id}`).remove();
        idsAmigosAgregados = idsAmigosAgregados.filter(id => id !== amigoId);
    };

    // Copiar enlace
    const botonCopiarEnlace = document.getElementById("copiarEnlace");
    if (botonCopiarEnlace) {
        botonCopiarEnlace.addEventListener("click", function () {
            botonCopiarEnlace.classList.add("copiado");
            botonCopiarEnlace.innerHTML = "Enlace copiado";
            navigator.clipboard.writeText("https://juntifyapp/3112621/jurejiuyghyIUCHWuwhqih/es.");
            setTimeout(() => {
                botonCopiarEnlace.classList.remove("copiado");
                botonCopiarEnlace.innerHTML = "Copiar enlace";
            }, 5000);
        });
    }
});



</script>